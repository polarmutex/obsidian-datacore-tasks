name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:ci

    - name: Run linting
      run: npm run lint

    - name: Type check
      run: npm run check

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build plugin
      run: npm run build

    - name: Create release package
      run: |
        mkdir -p release
        cp main.js release/
        cp manifest.json release/
        cp styles.css release/ 2>/dev/null || true
        cp README.md release/
        
        # Create zip package
        cd release
        zip -r ../obsidian-datacore-kanban-${{ github.ref_name }}.zip .
        cd ..

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: plugin-release-${{ github.ref_name }}
        path: |
          release/
          obsidian-datacore-kanban-${{ github.ref_name }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: plugin-release-${{ github.ref_name }}

    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Update manifest version
      run: |
        sed -i 's/"version": ".*"/"version": "${{ steps.version.outputs.VERSION }}"/' release/manifest.json

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## What's New in ${{ github.ref_name }}
          
          ### Features
          - Dynamic kanban board with Datacore integration
          - Tasks plugin compatibility with emoji syntax
          - Drag & drop task status management
          - Real-time updates and synchronization
          
          ### Installation
          1. Download `obsidian-datacore-kanban-${{ github.ref_name }}.zip`
          2. Extract to `.obsidian/plugins/obsidian-datacore-kanban/`
          3. Enable the plugin in Obsidian settings
          
          ### Requirements
          - Obsidian v0.15.0+
          - Datacore plugin v0.12.0+
          - Tasks plugin (recommended)
          
          ### Documentation
          See [README.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md) for detailed usage instructions.
          
          ---
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref_name }}
        files: |
          obsidian-datacore-kanban-${{ github.ref_name }}.zip
          release/main.js
          release/manifest.json
          release/styles.css
        draft: false
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ !contains(github.ref_name, 'beta') && !contains(github.ref_name, 'alpha') }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build plugin
      run: npm run build

    - name: Publish to npm (if configured)
      if: env.NODE_AUTH_TOKEN != ''
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    needs: [test, build, release]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.release.result == 'success'
      run: |
        echo "üéâ Release ${{ github.ref_name }} published successfully!"
        echo "Download: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"

    - name: Notify on failure
      if: needs.test.result == 'failure' || needs.build.result == 'failure' || needs.release.result == 'failure'
      run: |
        echo "‚ùå Release ${{ github.ref_name }} failed!"
        echo "Check the workflow logs for details."
        exit 1